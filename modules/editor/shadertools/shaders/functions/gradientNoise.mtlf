<function name="Noises/GradientNoise">
    <inputs>
        <input name="UV" type="vec2" embedded="_uv0"/>
        <input name="Scale" type="float" default="1.0"/>
    </inputs>
    <outputs>
        <output name="" type="float"/>
    </outputs>
    <code>
<![CDATA[
vec2 GradientNoiseDir(vec2 uv) {
    uv = mod(uv, 289);
    float x = (34 * uv.x + 1) * mod(uv.x, 289) + uv.y;
    x = (34 * x + 1) * mod(x, 289);
    x = fract(x / 41) * 2 - 1;
    return normalize(vec2(x - floor(x + 0.5), abs(x) - 0.5));
}

float GradientNoise(vec2 uv, float scale) {
    vec2 ip = floor(uv * scale);
    vec2 fp = fract(uv * scale);
    float d00 = dot(GradientNoiseDir(ip), fp);
    float d01 = dot(GradientNoiseDir(ip + vec2(0, 1)), fp - vec2(0, 1));
    float d10 = dot(GradientNoiseDir(ip + vec2(1, 0)), fp - vec2(1, 0));
    float d11 = dot(GradientNoiseDir(ip + vec2(1, 1)), fp - vec2(1, 1));
    fp = fp * fp * fp * (fp * (fp * 6 - 15) + 10);
    return mix(mix(d00, d01, fp.y), mix(d10, d11, fp.y), fp.x) + 0.5;
}
]]>
    </code>
</function>
